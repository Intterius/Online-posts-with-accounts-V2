[{"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\index.js":"1","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\App.js":"2","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\reportWebVitals.js":"3","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\navBar.jsx":"4","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\signIn.jsx":"5","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\notFound.jsx":"6","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\allPosts.jsx":"7","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\signInForm.jsx":"8","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\myPosts.jsx":"9","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\addPost.jsx":"10","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\register.jsx":"11","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\input.jsx":"12","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\registerForm.jsx":"13","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\notLogged.jsx":"14","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\alreadyLogged.jsx":"15","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\logOutBtn.jsx":"16","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\checkLogged.js":"17","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\addPostBtn.jsx":"18","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\post.jsx":"19","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\addPostForm.jsx":"20","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\setLocalStorage.js":"21","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\getCertainUsersPost.js":"22","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\getAllPosts.js":"23","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\loadingPosts.jsx":"24","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\deletePost.js":"25","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\editPostPage.jsx":"26","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\redux\\reducer.js":"27","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\redux\\actions\\actions.js":"28"},{"size":793,"mtime":1609426627564,"results":"29","hashOfConfig":"30"},{"size":1291,"mtime":1609268959274,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":760,"mtime":1608915815225,"results":"33","hashOfConfig":"30"},{"size":603,"mtime":1608911540309,"results":"34","hashOfConfig":"30"},{"size":733,"mtime":1608915878031,"results":"35","hashOfConfig":"30"},{"size":1778,"mtime":1609426960324,"results":"36","hashOfConfig":"30"},{"size":3595,"mtime":1609430224024,"results":"37","hashOfConfig":"30"},{"size":1974,"mtime":1609429984852,"results":"38","hashOfConfig":"30"},{"size":508,"mtime":1608830965719,"results":"39","hashOfConfig":"30"},{"size":515,"mtime":1608819257915,"results":"40","hashOfConfig":"30"},{"size":565,"mtime":1608568210328,"results":"41","hashOfConfig":"30"},{"size":3853,"mtime":1609429444565,"results":"42","hashOfConfig":"30"},{"size":895,"mtime":1608747218526,"results":"43","hashOfConfig":"30"},{"size":724,"mtime":1608749979445,"results":"44","hashOfConfig":"30"},{"size":609,"mtime":1609511043791,"results":"45","hashOfConfig":"30"},{"size":134,"mtime":1609427964325,"results":"46","hashOfConfig":"30"},{"size":477,"mtime":1608828150741,"results":"47","hashOfConfig":"30"},{"size":1563,"mtime":1609430720902,"results":"48","hashOfConfig":"30"},{"size":2362,"mtime":1609430153247,"results":"49","hashOfConfig":"30"},{"size":110,"mtime":1609427929025,"results":"50","hashOfConfig":"30"},{"size":362,"mtime":1609439236383,"results":"51","hashOfConfig":"30"},{"size":200,"mtime":1609094834412,"results":"52","hashOfConfig":"30"},{"size":631,"mtime":1609095647989,"results":"53","hashOfConfig":"30"},{"size":160,"mtime":1609179530022,"results":"54","hashOfConfig":"30"},{"size":3287,"mtime":1609439096674,"results":"55","hashOfConfig":"30"},{"size":729,"mtime":1609266787308,"results":"56","hashOfConfig":"30"},{"size":343,"mtime":1609267232200,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"kg8cao",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\index.js",[],["120","121"],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\App.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\reportWebVitals.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\navBar.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\signIn.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\notFound.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\allPosts.jsx",["122"],"import React, { useEffect } from 'react';\r\nimport NavBar from './navBar';\r\nimport '../css/allPosts.css';\r\nimport NotLogged from './common/notLogged';\r\nimport LogOutBtn from './common/logOutBtn';\r\nimport checkLogged from './utils/checkLogged';\r\nimport AddPostBtn from './common/addPostBtn';\r\nimport Post from './common/post';\r\nimport getAllPosts from './utils/getAllPosts';\r\nimport LoadingPosts from './common/loadingPosts';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nimport {\r\n  fetchPostsError,\r\n  fetchPostsRequest,\r\n  fetchPostsSuccess,\r\n} from './redux/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction AllPosts({posts,fetchPostsSuccess,fetchPostsRequest,fetchPostsError,isLoading}) {\r\n\r\n  useEffect(() => {\r\n    fetchPostsRequest()\r\n    getAllPosts().then((result) => {\r\n      fetchPostsSuccess(result);\r\n      if (checkLogged()) {\r\n        if (result.length === 0) {\r\n          toast.success(`Be our first publisher!`);\r\n        }\r\n      }\r\n    }).catch(er=>fetchPostsError(er));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {!checkLogged() ? (\r\n        <NotLogged />\r\n      ) : !posts ? (\r\n        <LoadingPosts />\r\n      ) : (\r\n        posts.map((post) => (\r\n          <Post\r\n            id={post.id}\r\n            key={post.id}\r\n            title={post.title}\r\n            user={post.user}\r\n            content={post.content}\r\n          />\r\n        ))\r\n      )}\r\n      <AddPostBtn />\r\n      <LogOutBtn />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts.posts,\r\n    isLoading:state.posts.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPostsError,\r\n  fetchPostsRequest,\r\n  fetchPostsSuccess,\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps,)(AllPosts);","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\signInForm.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\myPosts.jsx",["123"],"import React, { useEffect } from 'react';\r\nimport NavBar from './navBar';\r\nimport '../css/myPosts.css';\r\nimport NotLogged from './common/notLogged';\r\nimport LogOutBtn from './common/logOutBtn';\r\nimport checkLogged from './utils/checkLogged';\r\nimport AddPostBtn from './common/addPostBtn';\r\nimport Post from './common/post';\r\nimport { toast } from 'react-toastify';\r\nimport LoadingPosts from './common/loadingPosts';\r\n\r\nimport getCertainUsersPost from './utils/getCertainUsersPost';\r\nimport {\r\n  fetchPostsError,\r\n  fetchPostsRequest,\r\n  fetchPostsSuccess,\r\n} from './redux/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction MyPosts({\r\n  posts,\r\n  fetchPostsSuccess,\r\n  fetchPostsRequest,\r\n  fetchPostsError,\r\n  isLoading,\r\n}) {\r\n  useEffect(() => {\r\n    fetchPostsRequest();\r\n    getCertainUsersPost()\r\n      .then((result) => {\r\n        fetchPostsSuccess(result);\r\n\r\n        if (checkLogged()) {\r\n          if (result.length === 0) {\r\n            toast.error(`Unfortunately you haven't uploaded anything yet.`);\r\n          }\r\n        }\r\n      })\r\n      .catch((er) => fetchPostsError(er));\r\n  }, []);\r\n\r\n  return (\r\n    <div className='myPosts'>\r\n      <NavBar />\r\n      {!checkLogged() ? (\r\n        <NotLogged />\r\n      ) : !posts ? (\r\n        <LoadingPosts />\r\n      ) : (\r\n        posts.map((post) => (\r\n          <Post\r\n            id={post.id}\r\n            key={post.id}\r\n            title={post.title}\r\n            user={post.user}\r\n            content={post.content}\r\n          />\r\n        ))\r\n      )}\r\n      <AddPostBtn />\r\n      <LogOutBtn />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts.posts,\r\n    isLoading: state.posts.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPostsError,\r\n  fetchPostsRequest,\r\n  fetchPostsSuccess,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n//id={post.id} title={post.title} user={post.user} content={post.user}\r\n","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\addPost.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\register.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\input.jsx",[],["124","125"],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\registerForm.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\notLogged.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\alreadyLogged.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\logOutBtn.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\checkLogged.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\addPostBtn.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\post.jsx",["126"],"import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport deletePost from '../utils/deletePost';\r\nimport {Link} from 'react-router-dom'\r\nfunction Post({ id, title, content, user }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n   useEffect(() => {\r\n     const activeUser =  localStorage.getItem('username');\r\n  if(user === activeUser){\r\n    setCurrentUser(activeUser)\r\n  }\r\n   }, []);\r\n  const setPostId = (id)=>{\r\n    localStorage.setItem('postId',id)\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        color: 'black',\r\n        opacity: '0.7',\r\n        marginBottom: '1%',\r\n      }}\r\n      key={id}\r\n    >\r\n      <Card style={{ width: '45%' }}>\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Text>{content}</Card.Text>\r\n        </Card.Body>\r\n        <hr style={{ border: '1px solid black' }} />\r\n        <p>Posted by {user}</p>\r\n       \r\n        {currentUser && (\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            \r\n            <button className='btn btn-success' onClick={()=>setPostId(id)}>\r\n             <Link style={{textDecoration:'none',color:'white'}} to={`/edit-post/${id}`}>Edit</Link>\r\n            </button>\r\n            <button onClick={() => deletePost(id).then(resp=>window.location.reload())} className='btn btn-danger'>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\addPostForm.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\setLocalStorage.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\getCertainUsersPost.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\getAllPosts.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\loadingPosts.jsx",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\utils\\deletePost.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\common\\editPostPage.jsx",["127"],"import React, { useState,useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nfunction EditPostPage() {\r\n  const [postContent,setPostContent] = useState({\r\n    title:'',\r\n    content:''\r\n  })\r\n  const [userInput, setUserInput] = useState({ title: '', content: '' });\r\n  const { id: paramsId } = useParams();\r\n  const history = useHistory();\r\n  const user = localStorage.getItem('username');\r\n  const postId = localStorage.getItem('postId');\r\n  useEffect(()=>{\r\n    if (postId !== paramsId) {\r\n      history.push('/not-found');\r\n    }\r\n    getPostContent().then((res) =>{\r\n      const {title,content} = res;\r\n     setUserInput({title,content})\r\n     setPostContent({title,content})\r\n    });\r\n\r\n  },[])\r\n  \r\n  const getPostContent = async () => {\r\n    const { data } = await axios.get(\r\n      `http://localhost:3000/users-posts/${postId}`\r\n    );\r\n    return data;\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserInput({ ...userInput, [name]: value });\r\n  };\r\n  const handlePosting = async (user) => {\r\n    const timestamp = new Date();\r\n   await axios.patch(`http://localhost:3000/users-posts/${postId}`, {\r\n      title: userInput.title,\r\n      content: userInput.content,\r\n      user: user,\r\n      time: timestamp.getTime(),\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!userInput.title || !userInput.content) {\r\n      return toast.error('Please fill in the inputs.');\r\n    } else {\r\n      handlePosting(user).then(res=>{\r\n        localStorage.removeItem('postId')\r\n        history.push('/allposts')\r\n\r\n      }).catch(err=>console.log(err))\r\n    }\r\n  };\r\n  return postContent.title && (\r\n     <div\r\n      className='form'\r\n      style={{\r\n        backgroundColor: 'rgba(0,0,0,0.6)',\r\n        borderRadius: '15px',\r\n        marginTop: '5%',\r\n      }}\r\n    >\r\n      <form\r\n        className='sign-form'\r\n        style={{ backgroundColor: 'transparent' }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='form-group'>\r\n          <label htmlFor='title' style={{ color: 'white' }}>\r\n            <h1>Title</h1>\r\n          </label>\r\n          <input\r\n            name='title'\r\n            id='title'\r\n            type='text'\r\n            value={ userInput.userTitle}\r\n             defaultValue={postContent.title}\r\n            autoFocus={true}\r\n            className='form-control'\r\n            minLength='10'\r\n            maxLength='100'\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor='content' style={{ color: 'white' }}>\r\n            <h1>Your Content</h1>\r\n          </label>\r\n          <textarea\r\n            value={userInput.userContent}\r\n            defaultValue={postContent.content}\r\n            name='content'\r\n            id='content'\r\n            cols='100'\r\n            rows='9'\r\n            style={{ resize: 'none' }}\r\n            className='form-control'\r\n            minLength='50'\r\n            maxLength='560'\r\n            onChange={handleChange}\r\n          ></textarea>\r\n          <br />\r\n          <button  className='btn btn-success btn-sm'>Save</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n    \r\n}\r\n\r\nexport default EditPostPage;\r\n","C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\redux\\reducer.js",[],"C:\\Users\\Kusmitsch\\Desktop\\online-blogs-with-posts-v2\\src\\components\\redux\\actions\\actions.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":33,"column":6,"nodeType":"134","endLine":33,"endColumn":8,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"133","line":40,"column":6,"nodeType":"134","endLine":40,"endColumn":8,"suggestions":"136"},{"ruleId":"128","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","severity":1,"message":"139","line":12,"column":7,"nodeType":"134","endLine":12,"endColumn":9,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"141","line":25,"column":5,"nodeType":"134","endLine":25,"endColumn":7,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchPostsError', 'fetchPostsRequest', and 'fetchPostsSuccess'. Either include them or remove the dependency array. If 'fetchPostsRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["145"],["146"],["143"],["144"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'getPostContent', 'history', 'paramsId', and 'postId'. Either include them or remove the dependency array.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [fetchPostsError, fetchPostsRequest, fetchPostsSuccess]",{"range":"156","text":"157"},{"range":"158","text":"157"},"Update the dependencies array to be: [user]",{"range":"159","text":"160"},"Update the dependencies array to be: [getPostContent, history, paramsId, postId]",{"range":"161","text":"162"},[1015,1017],"[fetchPostsError, fetchPostsRequest, fetchPostsSuccess]",[1116,1118],[433,435],"[user]",[799,801],"[getPostContent, history, paramsId, postId]"]